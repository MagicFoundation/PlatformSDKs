// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     third_party/jni_zero/jni_generator.py
// For
//     android/net/connectivity/org/chromium/base/jank_tracker/JankMetricUMARecorder

#ifndef android_net_connectivity_org_chromium_base_jank_tracker_JankMetricUMARecorder_JNI
#define android_net_connectivity_org_chromium_base_jank_tracker_JankMetricUMARecorder_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace base {
namespace android {

static void JNI_JankMetricUMARecorder_RecordJankMetrics(JNIEnv* env, const
    base::android::JavaParamRef<jlongArray>& durationsNs,
    const base::android::JavaParamRef<jintArray>& missedVsyncs,
    jlong reportingIntervalStartTime,
    jlong reportingIntervalDuration,
    jint scenario);

JNI_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_MW_1d8G9n(
    JNIEnv* env,
    jclass jcaller,
    jlongArray durationsNs,
    jintArray missedVsyncs,
    jlong reportingIntervalStartTime,
    jlong reportingIntervalDuration,
    jint scenario) {
  return JNI_JankMetricUMARecorder_RecordJankMetrics(env,
      base::android::JavaParamRef<jlongArray>(env, durationsNs),
      base::android::JavaParamRef<jintArray>(env, missedVsyncs), reportingIntervalStartTime,
      reportingIntervalDuration, scenario);
}


}  // namespace android
}  // namespace base

#endif  // android_net_connectivity_org_chromium_base_jank_tracker_JankMetricUMARecorder_JNI
