// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     third_party/jni_zero/jni_generator.py
// For
//     android/net/connectivity/org/chromium/base/library_loader/LibraryPrefetcher

#ifndef android_net_connectivity_org_chromium_base_library_loader_LibraryPrefetcher_JNI
#define android_net_connectivity_org_chromium_base_library_loader_LibraryPrefetcher_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_helper.h"


// Step 1: Forward declarations.


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace base {
namespace android {

static void JNI_LibraryPrefetcher_ForkAndPrefetchNativeLibrary(JNIEnv* env);

JNI_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_M2btokUl(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_LibraryPrefetcher_ForkAndPrefetchNativeLibrary(env);
}

static jint JNI_LibraryPrefetcher_PercentageOfResidentNativeLibraryCode(JNIEnv* env);

JNI_BOUNDARY_EXPORT jint Java_android_net_connectivity_J_N_MLqDiN3g(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_LibraryPrefetcher_PercentageOfResidentNativeLibraryCode(env);
}

static void JNI_LibraryPrefetcher_PeriodicallyCollectResidency(JNIEnv* env);

JNI_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_M5yGJUDX(
    JNIEnv* env,
    jclass jcaller) {
  return JNI_LibraryPrefetcher_PeriodicallyCollectResidency(env);
}


}  // namespace android
}  // namespace base

#endif  // android_net_connectivity_org_chromium_base_library_loader_LibraryPrefetcher_JNI
