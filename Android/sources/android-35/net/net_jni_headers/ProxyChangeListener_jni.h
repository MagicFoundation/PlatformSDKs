// Copyright 2014 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     third_party/jni_zero/jni_generator.py
// For
//     android/net/connectivity/org/chromium/net/ProxyChangeListener

#ifndef android_net_connectivity_org_chromium_net_ProxyChangeListener_JNI
#define android_net_connectivity_org_chromium_net_ProxyChangeListener_JNI

#include <jni.h>

#include "third_party/jni_zero/jni_export.h"
#include "third_party/jni_zero/jni_zero_helper.h"


// Step 1: Forward declarations.

JNI_ZERO_COMPONENT_BUILD_EXPORT extern const char
    kClassPath_android_net_connectivity_org_chromium_net_ProxyChangeListener[];
const char kClassPath_android_net_connectivity_org_chromium_net_ProxyChangeListener[] =
    "android/net/connectivity/org/chromium/net/ProxyChangeListener";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_ZERO_COMPONENT_BUILD_EXPORT std::atomic<jclass>
    g_android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(nullptr);
#ifndef android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz_defined
#define android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz_defined
inline jclass android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_android_net_connectivity_org_chromium_net_ProxyChangeListener,
      &g_android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.
namespace net {

JNI_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_MsBGsdrx(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePtr,
    jobject caller) {
  ProxyConfigServiceAndroid::JNIDelegate* native =
      reinterpret_cast<ProxyConfigServiceAndroid::JNIDelegate*>(nativePtr);
  CHECK_NATIVE_PTR(env, jcaller, native, "ProxySettingsChanged");
  return native->ProxySettingsChanged(env, base::android::JavaParamRef<jobject>(env, caller));
}

JNI_BOUNDARY_EXPORT void Java_android_net_connectivity_J_N_Mu_1vv8fI(
    JNIEnv* env,
    jclass jcaller,
    jlong nativePtr,
    jobject caller,
    jstring host,
    jint port,
    jstring pacUrl,
    jobjectArray exclusionList) {
  ProxyConfigServiceAndroid::JNIDelegate* native =
      reinterpret_cast<ProxyConfigServiceAndroid::JNIDelegate*>(nativePtr);
  CHECK_NATIVE_PTR(env, jcaller, native, "ProxySettingsChangedTo");
  return native->ProxySettingsChangedTo(env, base::android::JavaParamRef<jobject>(env, caller),
      base::android::JavaParamRef<jstring>(env, host), port,
      base::android::JavaParamRef<jstring>(env, pacUrl),
      base::android::JavaParamRef<jobjectArray>(env, exclusionList));
}


static std::atomic<jmethodID>
    g_android_net_connectivity_org_chromium_net_ProxyChangeListener_create0(nullptr);
static base::android::ScopedJavaLocalRef<jobject> Java_ProxyChangeListener_create(JNIEnv* env) {
  jclass clazz = android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(env);
  CHECK_CLAZZ(env, clazz,
      android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(env), nullptr);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "create",
          "()Landroid/net/connectivity/org/chromium/net/ProxyChangeListener;",
          &g_android_net_connectivity_org_chromium_net_ProxyChangeListener_create0);

  jobject ret =
      env->CallStaticObjectMethod(clazz,
          call_context.base.method_id);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

static std::atomic<jmethodID>
    g_android_net_connectivity_org_chromium_net_ProxyChangeListener_getProperty1(nullptr);
static base::android::ScopedJavaLocalRef<jstring> Java_ProxyChangeListener_getProperty(JNIEnv* env,
    const base::android::JavaRef<jstring>& property) {
  jclass clazz = android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(env);
  CHECK_CLAZZ(env, clazz,
      android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(env), nullptr);

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_STATIC>(
          env,
          clazz,
          "getProperty",
          "(Ljava/lang/String;)Ljava/lang/String;",
          &g_android_net_connectivity_org_chromium_net_ProxyChangeListener_getProperty1);

  jstring ret =
      static_cast<jstring>(env->CallStaticObjectMethod(clazz,
          call_context.base.method_id, property.obj()));
  return base::android::ScopedJavaLocalRef<jstring>(env, ret);
}

static std::atomic<jmethodID>
    g_android_net_connectivity_org_chromium_net_ProxyChangeListener_start1(nullptr);
static void Java_ProxyChangeListener_start(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    jlong nativePtr) {
  jclass clazz = android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "start",
          "(J)V",
          &g_android_net_connectivity_org_chromium_net_ProxyChangeListener_start1);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, nativePtr);
}

static std::atomic<jmethodID>
    g_android_net_connectivity_org_chromium_net_ProxyChangeListener_stop0(nullptr);
static void Java_ProxyChangeListener_stop(JNIEnv* env, const base::android::JavaRef<jobject>& obj) {
  jclass clazz = android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      android_net_connectivity_org_chromium_net_ProxyChangeListener_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "stop",
          "()V",
          &g_android_net_connectivity_org_chromium_net_ProxyChangeListener_stop0);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

}  // namespace net

#endif  // android_net_connectivity_org_chromium_net_ProxyChangeListener_JNI
